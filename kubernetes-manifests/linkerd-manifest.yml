---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Controller RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["extensions", "apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list" , "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "replicationcontrollers", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["split.smi-spec.io"]
  resources: ["trafficsplits"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-controller
subjects:
- kind: ServiceAccount
  name: linkerd-controller
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-controller
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes", "namespaces"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["split.smi-spec.io"]
  resources: ["trafficsplits"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
###
### Service Profile CRD
###
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: serviceprofiles.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: linkerd.io
  versions:
  - name: v1alpha1
    served: true
    storage: false
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            description: Spec is the custom resource spec
            required:
            - routes
            properties:
              dstOverrides:
                type: array
                required:
                - authority
                - weight
                items:
                  type: object
                  description: WeightedDst is a weighted alternate destination.
                  properties:
                    authority:
                      type: string
                    weight:
                      x-kubernetes-int-or-string: true
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              opaquePorts:
                type: array
                items:
                  type: string
              retryBudget:
                type: object
                required:
                - minRetriesPerSecond
                - retryRatio
                - ttl
                description: RetryBudget describes the maximum number of retries that should be issued to this service.
                properties:
                  minRetriesPerSecond:
                    format: int32
                    type: integer
                  retryRatio: 
                    type: number
                    format: float
                  ttl:
                    type: string
              routes:
                type: array
                items:
                  type: object
                  description: RouteSpec specifies a Route resource.
                  required:
                  - condition
                  - name
                  properties:
                    condition:
                      type: object
                      description: RequestMatch describes the conditions under which to match a Route.
                      properties:
                        pathRegex: 
                          type: string
                        method: 
                          type: string
                        all:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        any:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        not: 
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                    isRetryable:
                      type: boolean
                    name:
                      type: string
                    timeout:
                      type: string
                    responseClasses:
                      type: array 
                      items:
                        type: object
                        required:
                        - condition
                        description: ResponseClass describes how to classify a response (e.g. success or failures).
                        properties:
                          condition:
                            type: object
                            description: ResponseMatch describes the conditions under
                              which to classify a response.
                            properties:
                              all:
                                type: array
                                items: 
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              any:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              not: 
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              status:
                                type: object
                                description: Range describes a range of integers (e.g. status codes).
                                properties:
                                  max:
                                    format: int32
                                    type: integer
                                  min:
                                    format: int32
                                    type: integer
                          isFailure:
                            type: boolean
  - name: v1alpha2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            description: Spec is the custom resource spec
            required:
            - routes
            properties:
              dstOverrides:
                type: array
                required:
                - authority
                - weight
                items:
                  type: object
                  description: WeightedDst is a weighted alternate destination.
                  properties:
                    authority:
                      type: string
                    weight:
                      x-kubernetes-int-or-string: true
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              opaquePorts:
                type: array
                items:
                  type: string
              retryBudget:
                type: object
                required:
                - minRetriesPerSecond
                - retryRatio
                - ttl
                description: RetryBudget describes the maximum number of retries that should be issued to this service.
                properties:
                  minRetriesPerSecond:
                    format: int32
                    type: integer
                  retryRatio: 
                    type: number
                    format: float
                  ttl:
                    type: string
              routes:
                type: array
                items:
                  type: object
                  description: RouteSpec specifies a Route resource.
                  required:
                  - condition
                  - name
                  properties:
                    condition:
                      type: object
                      description: RequestMatch describes the conditions under which to match a Route.
                      properties:
                        pathRegex: 
                          type: string
                        method: 
                          type: string
                        all:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        any:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        not: 
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                    isRetryable:
                      type: boolean
                    name:
                      type: string
                    timeout:
                      type: string
                    responseClasses:
                      type: array 
                      items:
                        type: object
                        required:
                        - condition
                        description: ResponseClass describes how to classify a response (e.g. success or failures).
                        properties:
                          condition:
                            type: object
                            description: ResponseMatch describes the conditions under
                              which to classify a response.
                            properties:
                              all:
                                type: array
                                items: 
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              any:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              not: 
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              status:
                                type: object
                                description: Range describes a range of integers (e.g. status codes).
                                properties:
                                  max:
                                    format: int32
                                    type: integer
                                  min:
                                    format: int32
                                    type: integer
                          isFailure:
                            type: boolean
  scope: Namespaced
  preserveUnknownFields: false
  names:
    plural: serviceprofiles
    singular: serviceprofile
    kind: ServiceProfile
    shortNames:
    - sp
---
###
### TrafficSplit CRD
### Copied from github.com/servicemeshinterface/smi-sdk-go/blob/d4e76b1cd7a33ead5f38d1262dd838a31c80f4e5/crds/split.yaml
###
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: trafficsplits.split.smi-spec.io
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  group: split.smi-spec.io
  scope: Namespaced
  conversion:
    strategy: None
  names:
    kind: TrafficSplit
    listKind: TrafficSplitList
    shortNames:
      - ts
    plural: trafficsplits
    singular: trafficsplit
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - service
                - backends
              properties:
                service:
                  description: The apex service of this split.
                  type: string
                backends:
                  description: The backend services of this split.
                  type: array
                  items:
                    type: object
                    required: ['service', 'weight']
                    properties:
                      service:
                        description: Name of the Kubernetes service.
                        type: string
                      weight:
                        description: Traffic weight value of this backend.
                        x-kubernetes-int-or-string: true
      additionalPrinterColumns:
      - name: Service
        type: string
        description: The apex service of this split.
        jsonPath: .spec.service
    - name: v1alpha2
      served: true
      storage: false
      additionalPrinterColumns:
      - name: Service
        type: string
        description: The apex service of this split.
        jsonPath: .spec.service
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - service
                - backends
              properties:
                service:
                  description: The apex service of this split.
                  type: string
                backends:
                  description: The backend services of this split.
                  type: array
                  items:
                    type: object
                    required: ['service', 'weight']
                    properties:
                      service:
                        description: Name of the Kubernetes service.
                        type: string
                      weight:
                        description: Traffic weight value of this backend.
                        type: number
  preserveUnknownFields: false
---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZmxuN3JGTXlDL0RWa2Q4dzdRc0RtekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TURReE1URTFNRFl6TlZvWERUSXpNRFF4TVRFMU1EWXpOVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPU2tYczlLK2VTYlE5dW9BNk9QT0puVVQvcnRPandKSVhOM1ZXa0w4TVR6SytwWQpOSERYZm9Ga2gvY3JiY0c3aVE2MFF5dnFPMDNPeVpaM2FxYkhIanhqQm5rMkJsalRyZy9heHVWc1RRZWJtT2w1CndXVDdyVU1oOWJjdEdlWlJKY0llY1J1U0FyaGxsK2s2WFc5OG9uMnNpTVNpVEJibjJIUDFZaGVFMjIvVlYrTFEKNTdiTTFIME9iSlZtREs4ZWRqOHREUFFFTjhyM2lqZXVudHM5UE0vaS9zWjZObVFsS2RYMkpWQ2d6MmpvZWFSbgpSTXFpQ0NyK2crTjViU2RKSVJKUGhkeCtwbDkycUN4M0Z0b0c1bUFEVGxHclczN2oySjk4dmthZUtHZ1QxMWtYCnUzT3pzdVpzS3lEejRiU1BtYktoclRiZ3J5bU5TWVk4aGVYc2c2OENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTmFaNFJSUk9pR2VJaWRxMGNmYk00NkF6OHFhY0tjdzRnN0cKeXRaSGJFTjJxdWRSaTgvSFdDeHlvL2tnMHBpaXJITndJaTJQemR6bUZkellaeURqVWJnZUxIUHpnanM1eU1wQQoxeVlWTmh6c0Z1UFI2cTJ4bjNZREZMdWYwL29DMHEwUXFPenFjYTc5dGdoTUM3eTdYNkVIcXVhWHVYUmNVZmVvClAxRHUwMGV2VWhxSmVrVUs4UmlINjNLUi95aCtCU0UyL3U4ck5QR0tOZEtac2FuZTJzc0tLRi9vTTFKckRpYWUKdVd4cDlURTJ1Y1M3eG1Pby93YTBoS0lVOGp5TUt3VTREdXMwcTdjMW5uSGp4UFlEV0RqM0JaN1o0QjhSQ0Z5TApjM3NmU2swUGRJWGxUUC9mVy9EQnNreFpiZ1lDUG03OGtLcHBoSEVMSGlCaEhEenhlVVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNUtSZXowcjU1SnREMjZnRG80ODRtZFJQK3UwNlBBa2hjM2RWYVF2d3hQTXI2bGcwCmNOZCtnV1NIOXl0dHdidUpEclJESytvN1RjN0psbmRxcHNjZVBHTUdlVFlHV05PdUQ5ckc1V3hOQjV1WTZYbkIKWlB1dFF5SDF0eTBaNWxFbHdoNXhHNUlDdUdXWDZUcGRiM3lpZmF5SXhLSk1GdWZZYy9WaUY0VGJiOVZYNHREbgp0c3pVZlE1c2xXWU1yeDUyUHkwTTlBUTN5dmVLTjY2ZTJ6MDh6K0wreG5vMlpDVXAxZllsVUtEUGFPaDVwR2RFCnlxSUlLdjZENDNsdEowa2hFaytGM0g2bVgzYW9MSGNXMmdibVlBTk9VYXRiZnVQWW4zeStScDRvYUJQWFdSZTcKYzdPeTVtd3JJUFBodEkrWnNxR3ROdUN2S1kxSmhqeUY1ZXlEcndJREFRQUJBb0lCQVFDKzB2U1NHNmhPaE10dwp3MXd1SVBXRFpiQk80N2tyckE4d0dGTy9kWWpBUjVmS1lVMTdORTlQM01DaHFLeFUrWmpkSGRQR0RocnF5SUIwCnhUdk03L2lyTzVhR2lYRm9wMXJwdnBVcm0yVDZ5WUVvczBhV2Fucmp3YThhNzFoallpeWFROS93dTc3cmVWYjgKLzRwRjV3YVN6dkhpOHZXQVZJWFIyZVhCYlUvYmwrYUhPS0xPNzI2eUNlUEFDb2FiaGlsU1RZRVJwVDFvUXg4MQpkMTVsdTg3ZzMvSzZJQmErbnh4RExnNUl5UnkzeHdUSDdPano5TzBmNGcwcmJzcTBaekFRLzhtRE1JL0pNcmlpCnBXdDg3Y2NSU2NJbWsybEMyY0p1WENDRjRWZlhqQlk2U3c5WVFld1A1MTVhZ0NVNEtZcFM3akN1V1YzL0ZLbXUKU3R6MXZiZzVBb0dCQVBJZFRZUitjNUNEbC90anh5TVhFbXROZktYejBmbzU2UkZtb25EcVY0WDE4c0FTbXlndApROU9mTzBYK2xqdEZUUnRzc0hsZFBDQ2pteW0xaWdqZHJUNTMvczJaWEhSenJVbk9VdG1rMHl6S2RsdE5GN0M0CnNJblNPbVVQWFdRU1hvWHVqN0QzYjJVSDZMWWJ3KzFVdUt0Q1d1M2NtVTVKb0hFUjIrR1hvNVhyQW9HQkFQSEIKUkhTcWE5YTd2WXYyQVkrNkNERUtNUUNGQWk3QVE3ajNsU3hnbG5iTVBXenBRcnpnVTlzS1NldDJSUmd2aldZNQoxeUd3N1NwaU1vYmRiYysrQ0ZxeS9aNDlYZmUxVGlDQVhTYTZBQi9UWDdZN25XaFppWC9jUnBia3A3aXd6bm5SCjFHSXQ1TGlTZVkvSzJEeTJUT2t2WHk5dlJrbEoxb1JNUElncU1rUk5Bb0dBTTBuSDBRaGtmTG1UcVhwU2hmbHUKT25MWXMrTDVtVE5KVHhsWjBlZWlrTXN3R0VZWXZpTVFtalRCL3FyV3NrbVU4dmxNVFBsV01tZldCN2pnTzg2UgowNGpoM2pYZG93R2FOT2RUSDYzTjJsQXRVRnY5Wjc5SURub05Tcms5aEdScng1MW9yUWxOZks1M09wU1pKWjVyCjNFT2JOWVlrcDdQckcraTNsb3RqNk84Q2dZQkwyMnp6ZnBZZjV3RHU3ZDVIandRSy96dXBBaE5SUUJyLzZ3L3YKd003MXI5aUdXQnNNMFFiKzhCZUp2cTZuakNRK00yQUJ2bFpzdWl0SWppcHF5U0l0ODRRSkp4QlpMWmE2TkEwRwpuYzUwTGdzV1QxWnc2OGR0UzEwSzgreDgwMTIyYzlURWljbis4RmNjZTNXbWR6MWkzZTVzSCtwYURNVTI5Z1Q0ClpPVW84UUtCZ1FEcXFhaXZqUmU0cEE1eVRuYUhWL2NBc2VnWkhGSWloYVNWZUttT2VGNUN0dmRlWm42YWhBL2IKSU82L1BnSTZvWjhPNWtzSUhNMlJ2UEttd2hMYytxdlVuL0pHSXdrYW9VTGhlQ2hxUXR3OUtTZjBBN3FQVEVCNQpFRWlhUlBraGdId2ZFV0JJbmdsRE96N08zc1pWQUdRNElwMEFEV2s1SXRWYURwVTErSjdoVnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZmxuN3JGTXlDL0RWa2Q4dzdRc0RtekFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl5TURReE1URTFNRFl6TlZvWERUSXpNRFF4TVRFMU1EWXpOVm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFPU2tYczlLK2VTYlE5dW9BNk9QT0puVVQvcnRPandKSVhOM1ZXa0w4TVR6SytwWQpOSERYZm9Ga2gvY3JiY0c3aVE2MFF5dnFPMDNPeVpaM2FxYkhIanhqQm5rMkJsalRyZy9heHVWc1RRZWJtT2w1CndXVDdyVU1oOWJjdEdlWlJKY0llY1J1U0FyaGxsK2s2WFc5OG9uMnNpTVNpVEJibjJIUDFZaGVFMjIvVlYrTFEKNTdiTTFIME9iSlZtREs4ZWRqOHREUFFFTjhyM2lqZXVudHM5UE0vaS9zWjZObVFsS2RYMkpWQ2d6MmpvZWFSbgpSTXFpQ0NyK2crTjViU2RKSVJKUGhkeCtwbDkycUN4M0Z0b0c1bUFEVGxHclczN2oySjk4dmthZUtHZ1QxMWtYCnUzT3pzdVpzS3lEejRiU1BtYktoclRiZ3J5bU5TWVk4aGVYc2c2OENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTmFaNFJSUk9pR2VJaWRxMGNmYk00NkF6OHFhY0tjdzRnN0cKeXRaSGJFTjJxdWRSaTgvSFdDeHlvL2tnMHBpaXJITndJaTJQemR6bUZkellaeURqVWJnZUxIUHpnanM1eU1wQQoxeVlWTmh6c0Z1UFI2cTJ4bjNZREZMdWYwL29DMHEwUXFPenFjYTc5dGdoTUM3eTdYNkVIcXVhWHVYUmNVZmVvClAxRHUwMGV2VWhxSmVrVUs4UmlINjNLUi95aCtCU0UyL3U4ck5QR0tOZEtac2FuZTJzc0tLRi9vTTFKckRpYWUKdVd4cDlURTJ1Y1M3eG1Pby93YTBoS0lVOGp5TUt3VTREdXMwcTdjMW5uSGp4UFlEV0RqM0JaN1o0QjhSQ0Z5TApjM3NmU2swUGRJWGxUUC9mVy9EQnNreFpiZ1lDUG03OGtLcHBoSEVMSGlCaEhEenhlVVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
###
### Service Profile Validator RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-sp-validator
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-sp-validator
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRWG1TZ3gxcEpoYmlHMmIwMENlUXJOakFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakEwTVRFeE5UQTJNelJhRncweU16QTBNVEV4TlRBMk16UmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMWVodkZTWFlVQ3psUjVqVmdBek5SQWM4VmV3MWdEdjU3ZVgrRFVac3ZicnJ0YWVxVnpGYQpCMjl2dXhOZWt1dGo3OVQ0b0Roc1UvZFFBMUdld09mRHkzUkU2WFdaZDlrNVN2dVpqRG1LOWd2OWl6SFF3ZUtXCmxzQ2ZlMFNydjRySVc4V2JzSlRBdmg0UmV3Tm83cWZ3VTI5N3dwVTNFSWpOSDlHWlUxL1dXMHdZQXYyaFhUWjIKWDRVcGZsRWtrRGNiSHROcGRxbDdTNXpaOFRXL2VReUVsUnpIKzdNY2ZRREM5eDEvdHM3bFNZeW53Y2Fub0FkNAo2WklCU1R1YUpzRWc0M0JZMFhBMnJSbVhNSU10RWVUWjRGQTBaR1I2dXRzVVNKMnlJejczZ3hQZ2FwOWFHRTkvCkV1MEl5dnowMU1uNzhFaW9ycnNwbExjYmNjY256V21LNHdJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUJIeHFpemRZZVpxdVgzSVdkVWl6SEtKS2NlNHFKaUl5OURkNll6WTJuSjYKeXI5cm9hajJyZ3ZxcHptYUFqdktDYnJaeGxDL1BDVGZPaG51RDludzEwWXdrTEtEb1B2SWRQQzNDNXZWSWxhYgpJMHdPM25ON2xRd00raUk5TjRRMWwwNFEvNnlrTUM1Q3hPU0FVQVVGaCtuTDNwZ3JBSUJQdTEwNE5rYTI4SWFsCnhzZ0NkYk03YmZzdXhwMm5KNnYyaTQ4bkI3UjhmN01vdTVtWHlEYzZkQ2llMG9EalU3UzhMTm5MRXVKak9TNFUKemN0VFFuNE9IZHYwenhSR29yTHpZWCtQYkZIdWJXTlZsb1FpN0p2NjcvUFdscVUzSGsxTFc2YTk5YTFkbm56WQo0NGR6UVZjbXh2bTFZOHY5NHU3VWpqaGY2OEd5ZTdDblRnbWZGVENqUjI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWVodkZTWFlVQ3psUjVqVmdBek5SQWM4VmV3MWdEdjU3ZVgrRFVac3ZicnJ0YWVxClZ6RmFCMjl2dXhOZWt1dGo3OVQ0b0Roc1UvZFFBMUdld09mRHkzUkU2WFdaZDlrNVN2dVpqRG1LOWd2OWl6SFEKd2VLV2xzQ2ZlMFNydjRySVc4V2JzSlRBdmg0UmV3Tm83cWZ3VTI5N3dwVTNFSWpOSDlHWlUxL1dXMHdZQXYyaApYVFoyWDRVcGZsRWtrRGNiSHROcGRxbDdTNXpaOFRXL2VReUVsUnpIKzdNY2ZRREM5eDEvdHM3bFNZeW53Y2FuCm9BZDQ2WklCU1R1YUpzRWc0M0JZMFhBMnJSbVhNSU10RWVUWjRGQTBaR1I2dXRzVVNKMnlJejczZ3hQZ2FwOWEKR0U5L0V1MEl5dnowMU1uNzhFaW9ycnNwbExjYmNjY256V21LNHdJREFRQUJBb0lCQUZsczBIT2czS3UzK1NwVApaSDRoMi9aaXFBQ3J2VG9jMk1GeDh5R05uWXc4QnFwc3E3UEQrQVUvdXhBVWF1YzA3UlNvamtBOUZseUwrYkZKCmYvclphV3MyOGxBL1Q2ZGc4cWk4UWxieS8zc1pUQ2ZTN1prQXB6L2l5MGwzVGUzSGtUZDhoemZ0R0I3aTV4L3MKTHdRR3hWdThNWnNKVW5uaEZ4QUVTZnNuQjdBbWZnSE9mc2w4OWRhYXJoN2NuTklIM1hMYmN2MndveXhSK1AybAp5UU1SK0sremlXbnFtMzlrVEdMU1BtTWJ2ZW13SFdRNHRNZTZsR25JdS9sU0FxeTd0VDU3K2pGNGI2V3pjMnJyCm1pK3ZVaEdjeW1ZUkNMajR1eEJPSlRSZEkwUnBjV2ZFT09hSlZncWU1eEhWOWNuWGVvTFJLYzF5QWNkL2pwZ2UKRytQS0xGRUNnWUVBNnhOUjQwUGxMeXpSVUlZaTFJWGZ0dXpkVFNEbzFEdGJPa04zQkNCWmV4dGVsNUxsaGFyUQpxR2E5VmR0SjhFR2U0N1FJWG1qUTNmcDFETFBMY2p0R2ZhZzRvays1RVBoVVZmUVdFUXBkL3VMUXBqajR0ZmZiCjQ4OUlWdTI0QzhlOE81cXo0RHFkRTZnbkxRZFE0ZGljUm5WVCt2OTI0RzUwSXBmbDZGV3lLNVVDZ1lFQTZQTEUKcjFFMjBxcTZPMTBIelBxZWFLTFRVT1JxbHE4dXl3NVFsT0V2QXhzdW54QXJDRGQrcGo0V3Rkb0JKUXRpdlUzcQpUZXU5a0tKQ2FFdlVCWjhQODIrdVFwTWJpM1ZRODd4TGt1TjI2dFFZOFRTUWdEZEdpYkp6SmhObWhTa016VldGCkxLa3UwUjFsMkZHbWJ4M0VUdUlZV05zOWZhRHA4YWpSa2F6RS9wY0NnWUFDWHZhRGVVclZkL2xBZTZuY1JPRmwKd2V2VmZGQjgyNEJuRFFrbFJJSkNpSnNpb2p1b1pubW1TU3I5czdHQ045YzNhcmh1NDFXLzkyZTQwaE5xT29qUwplYURnbWpjK29aS1FMMThObXZJcHdQWGp4MDFTNElZYVBSdjRySHNmdTByOXV1aTNpVC9PVS9MWk5HcXZiSFRmCkRRM2t5VERVd0toeE5PRC92K1dGSlFLQmdRQ0RxREhocEZVSDI5WkZsdDdCeXlPY24rb3UzZW9nSUFLaVlRVEsKSURzaDFrc1RPMkFXMU1hUHpxZW5QLzlGb0ptOXhEdVlycFFGR3EvTm9vM0NYNVAwVWpwN0JnbWJXRUxZZnFOMwo4WGRVWVd0M1orNERpVG9rdU9hN3JsdFRCMUJrL09DM3pTYllxWFRXUGMrREhaL0Z0YU50RlB3NzlLWkVIdFhUCkw0Sm5JUUtCZ1FEZHBnMG00Vm1WcXpHL0NiOUVubk9PWUVwbXNGTnhaSTV4R1JpUFVyZWdoN0ZvRXRzU3dFMW0KblpMZ0dwUllla29QMG5qejl2TlBsS091bHV0QlVLTFFWQnB5TVFRMW1hRDNHS21vOGdKSVEyNUpUMCs4dExxZQoxUXJhOVIxSW1wdWdnVy9NN1hmdUZkczVsTzk3cyswc2lKK3p3a1NEWDg1VFQxYTJ4bEtjTWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRWG1TZ3gxcEpoYmlHMmIwMENlUXJOakFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpNakEwTVRFeE5UQTJNelJhRncweU16QTBNVEV4TlRBMk16UmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMWVodkZTWFlVQ3psUjVqVmdBek5SQWM4VmV3MWdEdjU3ZVgrRFVac3ZicnJ0YWVxVnpGYQpCMjl2dXhOZWt1dGo3OVQ0b0Roc1UvZFFBMUdld09mRHkzUkU2WFdaZDlrNVN2dVpqRG1LOWd2OWl6SFF3ZUtXCmxzQ2ZlMFNydjRySVc4V2JzSlRBdmg0UmV3Tm83cWZ3VTI5N3dwVTNFSWpOSDlHWlUxL1dXMHdZQXYyaFhUWjIKWDRVcGZsRWtrRGNiSHROcGRxbDdTNXpaOFRXL2VReUVsUnpIKzdNY2ZRREM5eDEvdHM3bFNZeW53Y2Fub0FkNAo2WklCU1R1YUpzRWc0M0JZMFhBMnJSbVhNSU10RWVUWjRGQTBaR1I2dXRzVVNKMnlJejczZ3hQZ2FwOWFHRTkvCkV1MEl5dnowMU1uNzhFaW9ycnNwbExjYmNjY256V21LNHdJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUJIeHFpemRZZVpxdVgzSVdkVWl6SEtKS2NlNHFKaUl5OURkNll6WTJuSjYKeXI5cm9hajJyZ3ZxcHptYUFqdktDYnJaeGxDL1BDVGZPaG51RDludzEwWXdrTEtEb1B2SWRQQzNDNXZWSWxhYgpJMHdPM25ON2xRd00raUk5TjRRMWwwNFEvNnlrTUM1Q3hPU0FVQVVGaCtuTDNwZ3JBSUJQdTEwNE5rYTI4SWFsCnhzZ0NkYk03YmZzdXhwMm5KNnYyaTQ4bkI3UjhmN01vdTVtWHlEYzZkQ2llMG9EalU3UzhMTm5MRXVKak9TNFUKemN0VFFuNE9IZHYwenhSR29yTHpZWCtQYkZIdWJXTlZsb1FpN0p2NjcvUFdscVUzSGsxTFc2YTk5YTFkbm56WQo0NGR6UVZjbXh2bTFZOHY5NHU3VWpqaGY2OEd5ZTdDblRnbWZGVENqUjI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" , "UPDATE" ]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
###
### Control Plane PSP
###
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: linkerd-linkerd-control-plane
  labels:
    linkerd.io/control-plane-ns: linkerd
spec:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  allowedCapabilities:
  - NET_ADMIN
  - NET_RAW
  requiredDropCapabilities:
  - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  seLinux:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
    - min: 1
      max: 65535
  fsGroup:
    rule: MustRunAs
    ranges:
    - min: 1
      max: 65535
  volumes:
  - configMap
  - emptyDir
  - secret
  - projected
  - downwardAPI
  - persistentVolumeClaim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-psp
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ['policy', 'extensions']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - linkerd-linkerd-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-psp
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-psp
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-controller
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
- kind: ServiceAccount
  name: linkerd-sp-validator
  namespace: linkerd
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
data:
  values: |
    cliVersion: linkerd/cli dev-7603498c-root
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: ghcr.io/ralls0/linkerd2/controller
    controllerImageVersion: dev-7603498c-root
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: ghcr.io/ralls0/linkerd2/debug
        pullPolicy: ""
        version: dev-7603498c-root
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: false
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    grafanaUrl: ""
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      issuer:
        clockSkewAllowance: 20s
        crtExpiry: "2023-04-11T15:06:44Z"
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA0MTExNTA2MjRaFw0yMzA0MTExNTA2NDRaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE6Z0cyEpfYAbASJVF/RfwZGX4RdeAB5vzyQtLsQntjQppvAyAz361h8J5Aa4a
            p3gkFpTyCy3gAx7Ej4rdOUP7X6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSEhodrYC25szT6njZZpG0wr+7DBDAKBggqhkjOPQQDAgNIADBFAiEAr+65Jr4y
            MYy/Am3BuspcraYjFfG+EyOV3ux621P8ITMCIDszCqdPAe6aoqYvOW59K/yPbUEn
            AXQ1KyiMTVqLencc
            -----END CERTIFICATE-----
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMjA0MTExNTA2MjRaFw0yMzA0MTExNTA2NDRaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAE6Z0cyEpfYAbASJVF/RfwZGX4RdeAB5vzyQtLsQntjQppvAyAz361h8J5Aa4a
      p3gkFpTyCy3gAx7Ej4rdOUP7X6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSEhodrYC25szT6njZZpG0wr+7DBDAKBggqhkjOPQQDAgNIADBFAiEAr+65Jr4y
      MYy/Am3BuspcraYjFfG+EyOV3ux621P8ITMCIDszCqdPAe6aoqYvOW59K/yPbUEn
      AXQ1KyiMTVqLencc
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    installNamespace: true
    linkerdVersion: dev-7603498c-root
    namespace: linkerd
    nodeSelector:
      beta.kubernetes.io/os: linux
    omitWebhookSideEffects: false
    podAnnotations: {}
    podLabels: {}
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      capabilities: null
      disableIdentity: false
      enableExternalProfiles: false
      image:
        name: ghcr.io/ralls0/linkerd2/proxy
        pullPolicy: ""
        version: dev-7603498c-root
      inboundConnectTimeout: 100ms
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info
      opaquePorts: 25,443,587,3306,5432,11211
      outboundConnectTimeout: 1000ms
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: ""
      ignoreOutboundPorts: ""
      image:
        name: ghcr.io/linkerd/proxy-init
        pullPolicy: ""
        version: v1.3.11
      resources:
        cpu:
          limit: 100m
          request: 10m
        memory:
          limit: 50Mi
          request: 10Mi
      saMountPath: null
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    publicAPIProxyResources: null
    publicAPIResources: null
    spValidatorProxyResources: null
    spValidatorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
    linkerd.io/identity-issuer-expiry: 2023-04-11T15:06:44Z
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakEwTVRFeE5UQTJNalJhRncweU16QTBNVEV4TlRBMk5EUmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUU2WjBjeUVwZllBYkFTSlZGL1Jmd1pHWDRSZGVBQjV2enlRdExzUW50alFwcHZBeUF6MzYxaDhKNUFhNGEKcDNna0ZwVHlDeTNnQXg3RWo0cmRPVVA3WDZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU0Vob2RyWUMyNXN6VDZualpacEcwd3IrN0RCREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBcis2NUpyNHkKTVl5L0FtM0J1c3BjcmFZakZmRytFeU9WM3V4NjIxUDhJVE1DSURzekNxZFBBZTZhb3FZdk9XNTlLL3lQYlVFbgpBWFExS3lpTVRWcUxlbmNjCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUNZL3NVZ1RTS1NOYVY1dis4MHd0MUwyWnM4K1RIZEdEcFkyWGcydEpxQVhvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFNlowY3lFcGZZQWJBU0pWRi9SZndaR1g0UmRlQUI1dnp5UXRMc1FudGpRcHB2QXlBejM2MQpoOEo1QWE0YXAzZ2tGcFR5Q3kzZ0F4N0VqNHJkT1VQN1h3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: dev-7603498c-root
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli dev-7603498c-root
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-7603498c-root
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        env:
        - name: LINKERD2_IDENTITY_TRUST_ANCHORS
          value: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNakEwTVRFeE5UQTJNalJhRncweU16QTBNVEV4TlRBMk5EUmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUU2WjBjeUVwZllBYkFTSlZGL1Jmd1pHWDRSZGVBQjV2enlRdExzUW50alFwcHZBeUF6MzYxaDhKNUFhNGEKcDNna0ZwVHlDeTNnQXg3RWo0cmRPVVA3WDZOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU0Vob2RyWUMyNXN6VDZualpacEcwd3IrN0RCREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBcis2NUpyNHkKTVl5L0FtM0J1c3BjcmFZakZmRytFeU9WM3V4NjIxUDhJVE1DSURzekNxZFBBZTZhb3FZdk9XNTlLL3lQYlVFbgpBWFExS3lpTVRWcUxlbmNjCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: ghcr.io/ralls0/linkerd2/controller:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 300
          periodSeconds: 30
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
          initialDelaySeconds: 300
          periodSeconds: 30
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,443,587,3306,5432,11211"
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA0MTExNTA2MjRaFw0yMzA0MTExNTA2NDRaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE6Z0cyEpfYAbASJVF/RfwZGX4RdeAB5vzyQtLsQntjQppvAyAz361h8J5Aa4a
            p3gkFpTyCy3gAx7Ej4rdOUP7X6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSEhodrYC25szT6njZZpG0wr+7DBDAKBggqhkjOPQQDAgNIADBFAiEAr+65Jr4y
            MYy/Am3BuspcraYjFfG+EyOV3ux621P8ITMCIDszCqdPAe6aoqYvOW59K/yPbUEn
            AXQ1KyiMTVqLencc
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: ghcr.io/ralls0/linkerd2/proxy:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191"
        - --outbound-ports-to-ignore
        - "443"
        image: ghcr.io/linkerd/proxy-init:v1.3.11
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Controller
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-controller-api
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: controller
  ports:
  - name: http
    port: 8085
    targetPort: 8085
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
  labels:
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: dev-7603498c-root
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-controller
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: controller
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-controller
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli dev-7603498c-root
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-7603498c-root
      labels:
        linkerd.io/control-plane-component: controller
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-controller
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - public-api
        - -destination-addr=linkerd-dst.linkerd.svc.cluster.local:8086
        - -controller-namespace=linkerd
        - -log-level=info
        - -log-format=plain
        - -cluster-domain=cluster.local
        image: ghcr.io/ralls0/linkerd2/controller:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 300
          periodSeconds: 30
        name: public-api
        ports:
        - containerPort: 8085
          name: http
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
          initialDelaySeconds: 300
          periodSeconds: 30
        securityContext:
          runAsUser: 2103
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,443,587,3306,5432,11211"
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA0MTExNTA2MjRaFw0yMzA0MTExNTA2NDRaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE6Z0cyEpfYAbASJVF/RfwZGX4RdeAB5vzyQtLsQntjQppvAyAz361h8J5Aa4a
            p3gkFpTyCy3gAx7Ej4rdOUP7X6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSEhodrYC25szT6njZZpG0wr+7DBDAKBggqhkjOPQQDAgNIADBFAiEAr+65Jr4y
            MYy/Am3BuspcraYjFfG+EyOV3ux621P8ITMCIDszCqdPAe6aoqYvOW59K/yPbUEn
            AXQ1KyiMTVqLencc
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: ghcr.io/ralls0/linkerd2/proxy:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191"
        - --outbound-ports-to-ignore
        - "443"
        image: ghcr.io/linkerd/proxy-init:v1.3.11
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-controller
      volumes:
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: dev-7603498c-root
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli dev-7603498c-root
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-7603498c-root
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=false
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,443,587,3306,5432,11211
        image: ghcr.io/ralls0/linkerd2/controller:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 300
          periodSeconds: 30
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
          initialDelaySeconds: 300
          periodSeconds: 30
        securityContext:
          runAsUser: 2103
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,443,587,3306,5432,11211"
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA0MTExNTA2MjRaFw0yMzA0MTExNTA2NDRaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE6Z0cyEpfYAbASJVF/RfwZGX4RdeAB5vzyQtLsQntjQppvAyAz361h8J5Aa4a
            p3gkFpTyCy3gAx7Ej4rdOUP7X6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSEhodrYC25szT6njZZpG0wr+7DBDAKBggqhkjOPQQDAgNIADBFAiEAr+65Jr4y
            MYy/Am3BuspcraYjFfG+EyOV3ux621P8ITMCIDszCqdPAe6aoqYvOW59K/yPbUEn
            AXQ1KyiMTVqLencc
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: ghcr.io/ralls0/linkerd2/proxy:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191"
        - --outbound-ports-to-ignore
        - "443"
        image: ghcr.io/linkerd/proxy-init:v1.3.11
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-destination
      volumes:
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: dev-7603498c-root
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
spec:
  concurrencyPolicy: Replace
  schedule: "16 15 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli dev-7603498c-root
        spec:
          nodeSelector:
            beta.kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: ghcr.io/ralls0/linkerd2/controller:dev-7603498c-root
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              runAsUser: 2103
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: dev-7603498c-root
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  template:
    metadata:
      annotations:
        checksum/config: d521e38b00b8f84b2ae1f5c1efeb92dd1e3fa78992088816057cb7ba084c3668
        linkerd.io/created-by: linkerd/cli dev-7603498c-root
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-7603498c-root
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        image: ghcr.io/ralls0/linkerd2/controller:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 300
          periodSeconds: 30
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
          initialDelaySeconds: 300
          periodSeconds: 30
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,443,587,3306,5432,11211"
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA0MTExNTA2MjRaFw0yMzA0MTExNTA2NDRaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE6Z0cyEpfYAbASJVF/RfwZGX4RdeAB5vzyQtLsQntjQppvAyAz361h8J5Aa4a
            p3gkFpTyCy3gAx7Ej4rdOUP7X6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSEhodrYC25szT6njZZpG0wr+7DBDAKBggqhkjOPQQDAgNIADBFAiEAr+65Jr4y
            MYy/Am3BuspcraYjFfG+EyOV3ux621P8ITMCIDszCqdPAe6aoqYvOW59K/yPbUEn
            AXQ1KyiMTVqLencc
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: ghcr.io/ralls0/linkerd2/proxy:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191"
        - --outbound-ports-to-ignore
        - "443"
        image: ghcr.io/linkerd/proxy-init:v1.3.11
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
###
### Service Profile Validator
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: sp-validator
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli dev-7603498c-root
  labels:
    app.kubernetes.io/name: sp-validator
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: dev-7603498c-root
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-sp-validator
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: sp-validator
  template:
    metadata:
      annotations:
        checksum/config: 930c94fbd37cdb05ff7a05a0cd6fc4934ec0cb2d84bda60f1fe74205bfa5b0ba
        linkerd.io/created-by: linkerd/cli dev-7603498c-root
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: dev-7603498c-root
      labels:
        linkerd.io/control-plane-component: sp-validator
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-sp-validator
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        image: ghcr.io/ralls0/linkerd2/controller:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 300
          periodSeconds: 30
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
          initialDelaySeconds: 300
          periodSeconds: 30
        securityContext:
          runAsUser: 2103
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      - env:
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,443,587,3306,5432,11211"
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          value: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMjA0MTExNTA2MjRaFw0yMzA0MTExNTA2NDRaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAE6Z0cyEpfYAbASJVF/RfwZGX4RdeAB5vzyQtLsQntjQppvAyAz361h8J5Aa4a
            p3gkFpTyCy3gAx7Ej4rdOUP7X6NhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSEhodrYC25szT6njZZpG0wr+7DBDAKBggqhkjOPQQDAgNIADBFAiEAr+65Jr4y
            MYy/Am3BuspcraYjFfG+EyOV3ux621P8ITMCIDszCqdPAe6aoqYvOW59K/yPbUEn
            AXQ1KyiMTVqLencc
            -----END CERTIFICATE-----
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
        image: ghcr.io/ralls0/linkerd2/proxy:dev-7603498c-root
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 300
          periodSeconds: 30
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191"
        - --outbound-ports-to-ignore
        - "443"
        image: ghcr.io/linkerd/proxy-init:v1.3.11
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "50Mi"
          requests:
            cpu: "10m"
            memory: "10Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      serviceAccountName: linkerd-sp-validator
      volumes:
      - name: tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgY3J0RXhwaXJ5OiAiMjAyMy0wNC0xMVQxNTowNjo0NFoiCiAgICB0bHM6CiAgICAgIGNydFBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgICAgIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICAgICAgICBlUzVzYVc1clpYSmtMakFlRncweU1qQTBNVEV4TlRBMk1qUmFGdzB5TXpBME1URXhOVEEyTkRSYU1Cd3hHakFZCiAgICAgICAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogICAgICAgIFFnQUU2WjBjeUVwZllBYkFTSlZGL1Jmd1pHWDRSZGVBQjV2enlRdExzUW50alFwcHZBeUF6MzYxaDhKNUFhNGEKICAgICAgICBwM2drRnBUeUN5M2dBeDdFajRyZE9VUDdYNk5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgICAgICAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogICAgICAgIEJCU0Vob2RyWUMyNXN6VDZualpacEcwd3IrN0RCREFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVBcis2NUpyNHkKICAgICAgICBNWXkvQW0zQnVzcGNyYVlqRmZHK0V5T1YzdXg2MjFQOElUTUNJRHN6Q3FkUEFlNmFvcVl2T1c1OUsveVBiVUVuCiAgICAgICAgQVhRMUt5aU1UVnFMZW5jYwogICAgICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgICAga2V5UEVNOiB8CiAgICAgICAgLS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCiAgICAgICAgTUhjQ0FRRUVJQ1kvc1VnVFNLU05hVjV2Kzgwd3QxTDJaczgrVEhkR0RwWTJYZzJ0SnFBWG9Bb0dDQ3FHU000OQogICAgICAgIEF3RUhvVVFEUWdBRTZaMGN5RXBmWUFiQVNKVkYvUmZ3WkdYNFJkZUFCNXZ6eVF0THNRbnRqUXBwdkF5QXozNjEKICAgICAgICBoOEo1QWE0YXAzZ2tGcFR5Q3kzZ0F4N0VqNHJkT1VQN1h3PT0KICAgICAgICAtLS0tLUVORCBFQyBQUklWQVRFIEtFWS0tLS0tCmlkZW50aXR5VHJ1c3RBbmNob3JzUEVNOiB8CiAgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCiAgTUlJQmlEQ0NBUzZnQXdJQkFnSUJBVEFLQmdncWhrak9QUVFEQWpBY01Sb3dHQVlEVlFRREV4RnBaR1Z1ZEdsMAogIGVTNXNhVzVyWlhKa0xqQWVGdzB5TWpBME1URXhOVEEyTWpSYUZ3MHlNekEwTVRFeE5UQTJORFJhTUJ3eEdqQVkKICBCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNECiAgUWdBRTZaMGN5RXBmWUFiQVNKVkYvUmZ3WkdYNFJkZUFCNXZ6eVF0THNRbnRqUXBwdkF5QXozNjFoOEo1QWE0YQogIHAzZ2tGcFR5Q3kzZ0F4N0VqNHJkT1VQN1g2TmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnRUdNQjBHQTFVZEpRUVcKICBNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCiAgQkJTRWhvZHJZQzI1c3pUNm5qWlpwRzB3cis3REJEQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFyKzY1SnI0eQogIE1ZeS9BbTNCdXNwY3JhWWpGZkcrRXlPVjN1eDYyMVA4SVRNQ0lEc3pDcWRQQWU2YW9xWXZPVzU5Sy95UGJVRW4KICBBWFExS3lpTVRWcUxlbmNjCiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
